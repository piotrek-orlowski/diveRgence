% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/rDivWrapper.R
\name{rDivEngine}
\alias{rDivEngine}
\alias{rDivEngineInference}
\title{Realized divergence inference wrapper.}
\usage{
rDivEngine(rdata, fooStr, pow, makeReturns, align.by, align.period,
  marketopen = "08:30:00", marketclose = "15:15:00",
  intradaySeasonFun = function(x) 1, ...)

rDivEngineInference(rdata, fooStr, pow, test.size = 0.05, align.by,
  align.period, makeReturns, reference.time, year.days = 365,
  seconds.per.day = 86400, cl = NULL, spot.vol.series = NULL,
  jump.series = NULL, kernel.type = "gaussian", ...)
}
\arguments{
\item{rdata}{an \code{xts} object containing 1 price or return series.}

\item{fooStr}{character, name of base function (realized measure) for inference.}

\item{pow}{\code{numeric} vector of length \code{P}: functions from the set associated with \code{fooStr} will be evaluated with powers \code{pow}.}

\item{makeReturns}{boolean, should be \code{TRUE} when price data is supplied. Defaults to \code{FALSE}.}

\item{align.by}{argument to \code{\link[highfrequency]{aggregatePrice}}}

\item{align.period}{argument to \code{\link[highfrequency]{aggregatePrice}}}

\item{intradaySeasonFun}{Function. Allows to control for diurnal patterns in volatility whhen calculating estimators with jump truncation. Accepts 1 argument: time in seconds from start of trading day. The default setting returns 1.}

\item{...}{Arguments passed on to \code{\link[highfrequency]{aggregatePrice}}}

\item{reference.time}{Time string in format \code{\%H:\%M:\%S}, the time relative to which inputs to \code{intradaySeasonFun} are calculated.}

\item{spot.vol.series}{xts object: estimated spot volatility, if you don't like built-in methods; time stamps must correspond to time stamps in \code{rdata} upon input if you don't aggegate, otherwise they must yield a reasonable aggregated series.}

\item{jump.series}{xts object: estimated jump sizes, if you don't like built-in methods; provide jump times and sizes only, a substitute for the rdata series will be created.}
}
\value{
\code{rDivEngine} returns an \code{xts} object of dimension \code{num.days x length(pow)} \cr \cr
\code{rDivEngineInference} returns a list with fields \code{rDiv} and \code{asy.var}; the former contains the output of \code{rDivEngine}, the latter contains the confidence interval for estimation error, i.e. for \eqn{\hat{D}-D}.
}
\description{
A set of functions to calculate realized divergence measures and respective confidence intervals based on semimartingale discretisation theory.
}
\details{
The most important arguments to pass go \code{\link[highfrequency]{aggregatePrice}} are \code{marketopen} and \code{marketclose}, see documentation therein. The default values are different from our test data set. \cr \cr
There following divergence types are available (see Khajavi, Orlowski, Trojani 2015):\cr
\code{fooStr = 'rDiv'} -- realized power divergence of log returns with \code{p=pow}, \cr
\code{fooStr = 'rUDiv'} -- realized power divergence, scaled by value at outset of period, \code{p=pow},\cr
\code{fooStr = 'rJSkew'} -- realized skewness divergence of log returns (jump skewness) around power \code{p=pow}\cr
\code{fooStr = 'rUSkew'} -- realized skewness divergence, scaled by value at outset of period, around power \code{p=pow}, (similar to signed realized volaility)\cr
\code{fooStr = 'rJKurt'} -- realized quarticity divergence of log returns (jump kurtosis) around power \code{p=pow}\cr
\code{fooStr = 'rUKurt'} -- realized quarticity divergence, scaled by value at outset of period, around power \code{p=pow}, (similar to realized volaility weighted by divergence of return from outset)\cr
}
\section{Functions}{
\itemize{
\item \code{rDivEngineInference}: 
}}

